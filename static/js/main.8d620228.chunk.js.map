{"version":3,"sources":["components/CorrectText/index.jsx","constants/index.js","components/Input.jsx","components/App.jsx","index.jsx"],"names":["Title","text","Array","isArray","map","elem","index","key","s","defaultProps","BASE_PATH","Imput","state","result","api","fetch","then","res","json","renewal","catch","error","timerID","event","document","getElementById","innerText","this","setState","resultArr","arr","forEach","element","push","className","id","onKeyUp","type","contentEditable","Component","App","render"],"mappings":"4MAGaA,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACjB,2BACKC,MAAMC,QAAQF,GAAQA,EAAKG,KAAI,SAACC,EAAMC,GAAY,OAAO,0BAAMC,IAAKD,GAASD,EAAKG,EAAE,GAA3B,QAA4CP,IAW9GD,EAAMS,aAAe,CACjBR,KAAM,gBAGKD,ICpBFU,EAAY,qCCuDVC,E,4MAhDXC,MAAQ,CACJX,KAAM,GACNY,OAAQ,I,EAEZC,IAAM,SAACb,GACHc,MAAM,GAAD,OAAIL,GAAJ,ODXc,sBCWd,ODVe,oBCUf,OAA6CT,IAC7Ce,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAH,GAAM,OAAI,EAAKM,QAAQN,MAC5BO,OAAM,SAAAC,GAAK,OAAIA,M,EAqBxBC,QAAU,SAACC,GAEP,EAAKJ,UACa,MAAdI,EAAMhB,KACN,EAAKO,IAAIU,SAASC,eAAe,aAAaC,Y,sDAvB9Cb,GACJc,KAAKC,SAAS,CACV3B,KAAMuB,SAASC,eAAe,aAAaC,YAE5Cb,GACCc,KAAKC,SAAS,CACV3B,KAAM0B,KAAKE,UAAUhB,GACrBA,a,gCAIFA,GACN,IAAMiB,EAAM,GAIZ,OAHAjB,EAAOkB,SAAQ,SAAAC,GACZF,EAAIG,KAAKD,MAELF,I,+BAUD,IACE7B,EAAS0B,KAAKf,MAAdX,KACR,OACI,6BACI,yBAAKiC,UAAU,QAAQC,GAAG,YAAYC,QAAST,KAAKL,QAASe,KAAK,OAAOC,gBAAgB,SACzF,kBAAC,EAAD,CAAOrC,KAAMA,S,GA1CTsC,a,MCOLC,MARf,WACI,OACG,yBAAKN,UAAU,WACX,kBAAC,EAAD,QCFXO,iBAAO,kBAAC,EAAD,MAAQjB,SAASC,eAAe,U","file":"static/js/main.8d620228.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Title = ({ text }) => (\r\n    <p>\r\n        {Array.isArray(text) ? text.map((elem, index) => { return <span key={index} >{elem.s[0]} </span> }) : text}\r\n    </p>\r\n);\r\n\r\nTitle.propTypes = {\r\n    text: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.array,\r\n    ]),\r\n}\r\n\r\nTitle.defaultProps = {\r\n    text: 'Correct Text',\r\n}\r\n\r\nexport default Title;","export const BASE_PATH = 'http://speller.yandex.net/services';\r\nexport const SEARCH_PATH = '/spellservice.json';\r\nexport const SEARCH_PARSM = '/checkText?text=';","import React, { Component } from \"react\";\r\nimport { Title } from './CorrectText/index';\r\nimport { BASE_PATH, SEARCH_PATH, SEARCH_PARSM } from '../constants/index';\r\n\r\n\r\n\r\nclass Imput extends Component {\r\n    state = {\r\n        text: '',\r\n        result: [],\r\n    };\r\n    api = (text) => {\r\n        fetch(`${BASE_PATH}${SEARCH_PATH}${SEARCH_PARSM}${text}`)\r\n            .then(res => res.json())\r\n            .then(result => this.renewal(result))\r\n            .catch(error => error);\r\n    }\r\n    renewal(result) {\r\n        this.setState({\r\n            text: document.getElementById('textInput').innerText\r\n        });\r\n        if(result){\r\n            this.setState({\r\n                text: this.resultArr(result),\r\n                result\r\n            });\r\n        }\r\n    }\r\n    resultArr(result){\r\n        const arr = [];\r\n        result.forEach(element => {\r\n           arr.push(element)\r\n        });\r\n        return arr\r\n    }\r\n\r\n    timerID = (event) => {\r\n\r\n        this.renewal();\r\n        if (event.key === ' ') {\r\n            this.api(document.getElementById('textInput').innerText);\r\n        }\r\n    };\r\n    render() {\r\n        const { text } = this.state\r\n        return (\r\n            <div>\r\n                <div className='input' id='textInput' onKeyUp={this.timerID} type='text' contentEditable=\"true\" />\r\n                <Title text={text} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Imput","import React from \"react\"; \r\nimport Imput from './Input';\r\nimport './style.css';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n       <div className='wrapper'>\r\n           <Imput/>\r\n       </div>\r\n   )\r\n};\r\n\r\nexport default App","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\n\r\nrender(<App/>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}